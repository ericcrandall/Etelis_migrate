[
  {
    "objectID": "Etelis_migrate.html",
    "href": "Etelis_migrate.html",
    "title": "Gene Flow Models for Etelis spp. Deepwater Snappers",
    "section": "",
    "text": "Here I’m just loading a bunch of R packages that we’ll need.\n\n\nCode\nlibrary(tidyverse)\nlibrary(ape)\nlibrary(phangorn)\nlibrary(pegas)\nlibrary(strataG)\nlibrary(knitr)\nlibrary(emo)\nlibrary(coda)\nlibrary(ggmcmc)\nlibrary(perm)\n\n\n\n\n\nAnd here are some homebrewed functions that will be helpful.\n\n\nCode\n# Function library\nharvest.model.likelihoods <- function(workingDir = workingDir,\n                                      outfileName = \"outfile.txt\",\n                                      multilocus = T){\n    # this function harvests model marginal likelihoods for models calculated by\n    # the program migrate-n (Beerli & Felsenstein 2001).\n    # It takes as input a directory full of directories, \n    # each of which contains output from a migrate model, and is named\n    # after that model. \n  \n    #initialize a data frame to take the values\n    modelMarglikes <- data.frame(model=character(),\n                             thermodynamic=numeric(),\n                             bezier.corrected=numeric(), \n                             harmonic=numeric()) \n    # loop through directories in the working directory, each of which is name\n    # after a different model\n  for(i in list.dirs(workingDir, full.names = F)[-1]){ #i<-\"stepping.stone\"\n      modelDir<-file.path(workingDir,i)\n      print(modelDir)\n    #scan in the outfile, separating at each newline\n      outfile<-scan(file=file.path(modelDir,outfileName),what=\"character\",sep=\"\\n\") \n    #find the line with the likelihoods on it and split on runs of spaces\n      marglikeline <- strsplit(grep(\"  All          \",outfile,value=T),\n                               \"\\\\s+\", perl = T)[[1]][3:5]\n    #  if(length(marglikeline)==0){next}\n      marglikes <- c(i,marglikeline)\n     \n      modelMarglikes <- rbind(modelMarglikes,marglikes, deparse.level = 2)\n  }\n  names(modelMarglikes) <- c(\"model\",\"thermodynamic\",\"bezier.corrected\",\"harmonic\")\n  modelMarglikes[2:4] <- sapply(modelMarglikes[2:4], as.numeric)\n  return(modelMarglikes)\n}\n\nbfcalcs<-function(df,ml=\"bezier.corrected\"){\n  # This calculates log bayes factors on data frames output by\n  # harvest.model.likelihoods(), following Johnson and Omland (2004)\n  # You may choose the likelihood flavor with\n  # ml = \"bezier.corrected\", \"thermodynamic\" or \"harmonic\"\n  #df$thermodynamic <- as.numeric(df$thermodynamic)\n  #df$bezier.corrected <- as.numeric(df$bezier.corrected)\n  #df$harmonic <- as.numeric(df$harmonic)\n  mlcol <- df[[ml]] \n    bmvalue <- mlcol[which.max(mlcol)]\n    lbf <- 2*(mlcol-bmvalue)\n    choice <- rank(-mlcol)\n    modelprob <- exp(lbf/2)/sum(exp(lbf/2))\n    dfall <- cbind(df,lbf,choice,modelprob)\n    return(dfall)\n}   \n\nmigrants.per.gen<-function(x){\n  #a function for creating Nm vectors out of m and Theta vectors.\n  #x<-x[[1]]\n  m<-names(x)[which(grepl(\"M_\",names(x)))] #names of m columns\n  #theta<-names(x)[which(grepl(\"Theta_\",names(x)))] #names of theta columns\n  for(n in m){\n    t<-paste(\"Theta\",strsplit(n,split=\"_\")[[1]][3],sep=\"_\")\n    x[,paste(\"Nm\",strsplit(n,split=\"_\")[[1]][2],strsplit(n,split=\"_\")[[1]][3],sep=\"_\")]<- x[,which(names(x)==n)]*x[,which(names(x)==t)] \n    #this hairy little statement makes a new column named \"Nm_X_Y\" and then fills it by multiplying the M_X_Y column by the Theta_Y column  \n  }\n  return(x)\n}"
  },
  {
    "objectID": "Etelis_migrate.html#clean-the-data-with-process_radtags",
    "href": "Etelis_migrate.html#clean-the-data-with-process_radtags",
    "title": "Gene Flow Models for Etelis spp. Deepwater Snappers",
    "section": "Clean the data with process_radtags",
    "text": "Clean the data with process_radtags\nsame commands for carbunculus and coruscans\n\nprocess_radtags -p ./raw/ -o ./cleaned/ --rescue --clean --quality --paired --threads 12 --renz-1 ecoRI --renz-2 mspI  \\\n                  --truncate 145 --len-limit 145 \\\n                  --adapter-1 GATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG \\\n                  --adapter-2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT \\\n                  --adapter-mm 2\n\n\nE. carbunculus output\n\nBEGIN total_raw_read_counts\nTotal Sequences 255732606\nReads containing adapter sequence 2116758 0.8%\nBarcode Not Found 0 0.0%\nLow Quality 600765 0.2%\nRAD Cutsite Not Found 1752258 0.7%\nRetained Reads 251262825 98.3%\nEND total_raw_read_counts\n\n\n\nE. coruscans output\n\nBEGIN total_raw_read_counts\nTotal Sequences 272955592\nReads containing adapter sequence 1919907 0.7%\nBarcode Not Found 0 0.0%\nLow Quality 8734891 3.2%\nRAD Cutsite Not Found 1884115 0.7%\nRetained Reads 260416679 95.4%\nEND total_raw_read_counts"
  },
  {
    "objectID": "Etelis_migrate.html#running-the-denovo_map.pl-pipeline",
    "href": "Etelis_migrate.html#running-the-denovo_map.pl-pipeline",
    "title": "Gene Flow Models for Etelis spp. Deepwater Snappers",
    "section": "Running the denovo_map.pl pipeline",
    "text": "Running the denovo_map.pl pipeline\nHmm… gotta rename the cleaned files too. All code is being run on both species.\n\nMore renaming\n\ncd cleaned\nfor f in *001.1.fq.gz\ndo\nmv $f ${f/_R[12]_001.1.fq.gz/.1.fq.gz}\ndone\n\nfor f in *001.2.fq.gz\ndo\nmv $f ${f/_R[12]_001.2.fq.gz/.2.fq.gz}\ndone\n\n#rename the \"remainder reads\" that have had their pair removed for low quality\nfor f in *001.rem.1.fq.gz; do mv $f ${f/_R[12]_001.rem.1.fq.gz/.rem.1.fq.gz}; done\nfor f in *001.rem.2.fq.gz; do mv $f ${f/_R[12]_001.rem.2.fq.gz/.rem.2.fq.gz}; done"
  }
]